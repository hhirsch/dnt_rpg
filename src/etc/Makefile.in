#  DccNiTghtmare: a satirical post-apocalyptical RPG.
#  Copyright (C) 2005-2012 DNTeam <dnt@dnteam.org>
# 
#  This file is part of DccNiTghtmare.
# 
#  DccNiTghtmare is free software: you can redistribute it and/or modify
#  it under the terms of the GNU General Public License as published by
#  the Free Software Foundation, either version 3 of the License, or
#  (at your option) any later version.
#
#  DccNiTghtmare is distributed in the hope that it will be useful,
#  but WITHOUT ANY WARRANTY; without even the implied warranty of
#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#  GNU General Public License for more details.
#
#  You should have received a copy of the GNU General Public License
#  along with DccNiTghtmare.  If not, see <http://www.gnu.org/licenses/>.

CFLAGS = @CPPFLAGS@ -g -c -Wall -O2
CC = @CXX@
CPP= @CXX@
LDFLAGS = @LDFLAGS@
LIBS= @LIBS@
EFLAGS = @CPPFLAGS@ $(LDFLAGS) $(LIBS)

ENDCLASSES=../classes/

all: animodel.o btree.o boundingbox.o btreecell.o cal3dmodel.o \
     defparser.o distance.o \
     scenenode.o scene.o dirs.o extensions.o list.o \
	  md5model.o md5anim.o \
	  message3d.o npcfile.o \
	  overlaps.o quaternion.o shader.o \
     texrenderer.o userinfo.o

animodel.o: animodel.h animodel.cpp dirs.h overlaps.h md5anim.h md5model.h \
            cal3dmodel.h quaternion.h
	@printf "Making $@...\n"
	@$(CPP) $(CFLAGS) -c animodel.cpp -o $@
	@printf "\e[0;32mDone\e[0;0m ($@)\n"

btree.o: btree.h btree.cpp
	@printf "Making $@...\n"
	@$(CPP) $(CFLAGS) -c btree.cpp -o $@
	@printf "\e[0;32mDone\e[0;0m ($@)\n"

btreecell.o: btreecell.h btreecell.cpp
	@printf "Making $@...\n"
	@$(CPP) $(CFLAGS) -c btreecell.cpp -o $@
	@printf "\e[0;32mDone\e[0;0m ($@)\n"

boundingbox.o: boundingbox.h boundingbox.cpp
	@printf "Making $@...\n"
	@$(CPP) $(CFLAGS) -c boundingbox.cpp -o $@
	@printf "\e[0;32mDone\e[0;0m ($@)\n"

cal3dmodel.o: animodel.h cal3dmodel.cpp cal3dmodel.h dirs.h
	@printf "Making $@...\n"
	@$(CPP) $(CFLAGS) -c cal3dmodel.cpp -o $@
	@printf "\e[0;32mDone\e[0;0m ($@)\n"

defparser.o: defparser.h defparser.cpp
	@printf "Making $@...\n"
	@$(CPP) $(CFLAGS) -c defparser.cpp -o $@
	@printf "\e[0;32mDone\e[0;0m ($@)\n"

distance.o: distance.h distance.cpp
	@printf "Making $@...\n"
	@$(CPP) $(CFLAGS) -c distance.cpp -o $@
	@printf "\e[0;32mDone\e[0;0m ($@)\n"

dirs.o: dirs.h dirs.cpp
	@printf "Making $@...\n"
	@$(CPP) $(CFLAGS) -c dirs.cpp -o $@
	@printf "\e[0;32mDone\e[0;0m ($@)\n"

extensions.o: extensions.h extensions.cpp
	@printf "Making $@...\n"
	@$(CPP) $(CFLAGS) -c extensions.cpp -o $@
	@printf "\e[0;32mDone\e[0;0m ($@)\n"

list.o: list.cpp list.h
	@printf "Making $@...\n"
	@$(CPP) $(CFLAGS) -c list.cpp -o $@
	@printf "\e[0;32mDone\e[0;0m ($@)\n"

md5model.o: md5model.cpp md5model.h quaternion.h md5anim.h
	@printf "Making $@...\n"
	@$(CPP) $(CFLAGS) -c md5model.cpp -o $@
	@printf "\e[0;32mDone\e[0;0m ($@)\n"

md5anim.o: md5anim.cpp md5anim.h quaternion.h
	@printf "Making $@...\n"
	@$(CPP) $(CFLAGS) -c md5anim.cpp -o $@
	@printf "\e[0;32mDone\e[0;0m ($@)\n"

message3d.o: message3d.cpp message3d.h
	@printf "Making $@...\n"
	@$(CPP) $(CFLAGS) -c message3d.cpp -o $@
	@printf "\e[0;32mDone\e[0;0m ($@)\n"

modellist.o: modellist.h modellist.cpp animodel.h
	@printf "Making $@...\n"
	@$(CPP) $(CFLAGS) -c modellist.cpp -o $@
	@printf "\e[0;32mDone\e[0;0m ($@)\n"

npcfile.o: npcfile.cpp npcfile.h dirs.h
	@printf "Making $@...\n"
	@$(CPP) $(CFLAGS) -c npcfile.cpp -o $@
	@printf "\e[0;32mDone\e[0;0m ($@)\n"

overlaps.o: overlaps.cpp overlaps.h
	@printf "Making $@...\n"
	@$(CC) $(CFLAGS) overlaps.cpp -o $@
	@printf "\e[0;32mDone\e[0;0m ($@)\n"

quaternion.o: quaternion.h quaternion.cpp
	@printf "Making $@...\n"
	@$(CPP) $(CFLAGS) -c quaternion.cpp -o $@
	@printf "\e[0;32mDone\e[0;0m ($@)\n"

scenenode.o: scenenode.h scenenode.cpp animodel.h cal3dmodel.h \
             quaternion.h md5model.h md5anim.h
	@printf "Making $@...\n"
	@$(CPP) $(CFLAGS) -c scenenode.cpp -o $@
	@printf "\e[0;32mDone\e[0;0m ($@)\n"

scene.o: scene.h scene.cpp scenenode.h animodel.h cal3dmodel.h \
             quaternion.h md5model.h md5anim.h
	@printf "Making $@...\n"
	@$(CPP) $(CFLAGS) -c scene.cpp -o $@
	@printf "\e[0;32mDone\e[0;0m ($@)\n"

shader.o: shader.cpp shader.h dirs.h extensions.h
	@printf "Making shader.o...\n"
	@$(CC) $(CFLAGS) shader.cpp -o $@
	@printf "\e[0;32mDone\e[0;0m ($@)\n"

texrenderer.o: texrenderer.h texrenderer.cpp btree.h btreecell.h
	@printf "Making $@...\n"
	@$(CPP) $(CFLAGS) -c texrenderer.cpp -o $@
	@printf "\e[0;32mDone\e[0;0m ($@)\n"

userinfo.o: userinfo.h userinfo.cpp
	@printf "Making $@...\n"
	@$(CPP) $(CFLAGS) -c userinfo.cpp -o $@
	@printf "\e[0;32mDone\e[0;0m ($@)\n"

clean:
	@printf "Cleaning Etc Bin Files...\n"
	@\rm -rf *.o fifo
	@printf "\e[0;32mCleaned.\e[0;0m\n"
