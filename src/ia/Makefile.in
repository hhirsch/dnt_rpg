#  DccNiTghtmare: a satirical post-apocalyptical RPG.
#  Copyright (C) 2005-2011 DNTeam <dnt@dnteam.org>
# 
#  This file is part of DccNiTghtmare.
# 
#  DccNiTghtmare is free software: you can redistribute it and/or modify
#  it under the terms of the GNU General Public License as published by
#  the Free Software Foundation, either version 3 of the License, or
#  (at your option) any later version.
#
#  DccNiTghtmare is distributed in the hope that it will be useful,
#  but WITHOUT ANY WARRANTY; without even the implied warranty of
#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#  GNU General Public License for more details.
#
#  You should have received a copy of the GNU General Public License
#  along with DccNiTghtmare.  If not, see <http://www.gnu.org/licenses/>.


CFLAGS = @CPPFLAGS@ -g -c -Wall -O2
CC = @CXX@
CPP = @CXX@
LDFLAGS = @LDFLAGS@
LIBS= @LIBS@
EFLAGS = @CPPFLAGS@ $(LDFLAGS) $(LIBS)

ENDGUI = ../gui/
ENDENGINE = ../engine/
ENDMAP = ../map/
ENDETC = ../etc/
ENDIA = ../ia/
ENDPART = ../particle/
ENDCLASSES = ../classes/
ENDFIGHT = ../fight/
ENDSOUND = ../sound/
ENDLANG = ../lang/
OBJSMAPA = $(ENDMAP)map.o $(ENDMAP)mapfog.o $(ENDMAP)maplights.o $(ENDMAP)mapobjeto.o $(ENDMAP)maproad.o
OBJSGUI = $(ENDGUI)bartexto.o $(ENDGUI)botao.o $(ENDGUI)cores.o $(ENDGUI)cxsel.o $(ENDGUI)desenho.o $(ENDGUI)erro.o $(ENDGUI)messages.o $(ENDGUI)eventos.o $(ENDGUI)farso.o $(ENDGUI)figura.o $(ENDGUI)fonte.o $(ENDGUI)healthBar.o $(ENDGUI)janela.o $(ENDGUI)lista.o $(ENDGUI)listtext.o $(ENDGUI)menu.o $(ENDGUI)mouse.o $(ENDGUI)quadtexto.o $(ENDGUI)rolbar.o $(ENDGUI)seltexto.o $(ENDGUI)tabbotao.o
OBJSNET = #$(ENDNET)client.o $(ENDNET)common.o
OBJSCLASSES = $(ENDCLASSES)classes.o $(ENDCLASSES)race.o $(ENDCLASSES)skills.o $(ENDCLASSES)align.o $(ENDCLASSES)feats.o $(ENDCLASSES)defs.o $(ENDCLASSES)actions.o $(ENDCLASSES)thing.o $(ENDCLASSES)object.o $(ENDCLASSES)itemslot.o $(ENDCLASSES)inventory.o $(ENDCLASSES)barter.o
OBJSSOUND = $(ENDSOUND)ogg_stream.o  $(ENDSOUND)sound.o $(ENDSOUND)sndfx.o
OBJSLANG = $(ENDLANG)lang.o
OBJSPART = $(ENDPART)part1.o $(ENDPART)part2.o $(ENDPART)part3.o $(ENDPART)part4.o $(ENDPART)part5.o $(ENDPART)part6.o $(ENDPART)part7.o $(ENDPART)particle.o $(ENDPART)partSystem.o $(ENDPART)wave.o $(ENDPART)grass.o $(ENDPART)meteor.o
OBJSFIGHT = $(ENDFIGHT)fightGroup.o $(ENDFIGHT)initiative.o $(ENDFIGHT)fightSystem.o
OBJSETC = $(ENDETC)animodel.o $(ENDETC)glm.o $(ENDETC)texture.o $(ENDETC)modellist.o
OBJSENGINE = $(ENDENGINE)alignwindow.o $(ENDENGINE)aspectwindow.o $(ENDENGINE)attwindow.o $(ENDENGINE)camera.o $(ENDENGINE)classwindow.o $(ENDENGINE)collision.o $(ENDENGINE)conversa.o $(ENDENGINE)culling.o $(ENDENGINE)cursor.o $(ENDENGINE)dccnit.o $(ENDENGINE)initial.o $(ENDENGINE)inventwindow.o $(ENDENGINE)modstate.o $(ENDENGINE)options.o $(ENDENGINE)personagens.o $(ENDENGINE)racewindow.o $(ENDENGINE)skillwindow.o $(ENDENGINE)shadow.o $(ENDENGINE)sky.o $(ENDENGINE)sun.o $(ENDENGINE)util.o

OBJS = agent.o astar.o fuzzy.o fuzzyfunction.o fuzzyrule.o fuzzyvariable.o iafuncs.o iascript.o iastack.o iavariable.o pattAgent.o potentAgent.o  
all: $(OBJS)

agent.o: agent.cpp agent.h $(ENDENGINE)util.h
	@printf "Making $@...\n"
	@$(CPP) $(CFLAGS) agent.cpp -o $@
	@printf "\e[0;32mDone\e[0;0m ($@)\n"

astar.o: astar.cpp astar.h pattAgent.h $(ENDMAP)map.h
	@printf "Making $@...\n"
	@$(CPP) $(CFLAGS) astar.cpp -o $@
	@printf "\e[0;32mDone\e[0;0m ($@)\n"

fuzzy.o: fuzzy.cpp fuzzy.h fuzzyrule.h fuzzyfunction.h fuzzyvariable.h
	@printf "Making $@...\n"
	@$(CPP) $(CFLAGS) fuzzy.cpp -o $@
	@printf "\e[0;32mDone\e[0;0m ($@)\n"

fuzzyfunction.o: fuzzyfunction.cpp fuzzyfunction.h
	@printf "Making $@...\n"
	@$(CPP) $(CFLAGS) fuzzyfunction.cpp -o $@
	@printf "\e[0;32mDone\e[0;0m ($@)\n"

fuzzyrule.o: fuzzyrule.cpp fuzzyrule.h fuzzyfunction.h fuzzyvariable.h
	@printf "Making $@...\n"
	@$(CPP) $(CFLAGS) fuzzyrule.cpp -o $@
	@printf "\e[0;32mDone\e[0;0m ($@)\n"

fuzzyvariable.o: fuzzyvariable.cpp fuzzyvariable.h fuzzyfunction.h
	@printf "Making $@...\n"
	@$(CPP) $(CFLAGS) fuzzyvariable.cpp -o $@
	@printf "\e[0;32mDone\e[0;0m ($@)\n"

iafuncs.o: iafuncs.cpp iafuncs.h
	@printf "Making $@...\n"
	@$(CPP) $(CFLAGS) iafuncs.cpp -o $@
	@printf "\e[0;32mDone\e[0;0m ($@)\n"

iascript.o: iascript.cpp iascript.h iafuncs.h iavariable.h \
            iastack.h $(ENDENGINE)character.h $(ENDCLASSES)object.h \
				$(ENDCLASSES)feats.h $(ENDCLASSES)skills.h \
				$(ENDCLASSES)actions.h $(ENDMAP)map.h
	@printf "Making $@...\n"
	@$(CPP) $(CFLAGS) iascript.cpp -o $@
	@printf "\e[0;32mDone\e[0;0m ($@)\n"

iastack.o: iastack.cpp iastack.h
	@printf "Making $@...\n"
	@$(CPP) $(CFLAGS) iastack.cpp -o $@
	@printf "\e[0;32mDone\e[0;0m ($@)\n"

iavariable.o: iavariable.cpp iavariable.h iafuncs.h
	@printf "Making $@...\n"
	@$(CPP) $(CFLAGS) iavariable.cpp -o $@
	@printf "\e[0;32mDone\e[0;0m ($@)\n"

pattAgent.o: pattAgent.cpp pattAgent.h agent.h
	@printf "Making $@...\n"
	@$(CPP) $(CFLAGS) pattAgent.cpp -o $@
	@printf "\e[0;32mDone\e[0;0m ($@)\n"

potentAgent.o: potentAgent.cpp potentAgent.h agent.h
	@printf "Making $@...\n"
	@$(CPP) $(CFLAGS) potentAgent.cpp -o $@
	@printf "\e[0;32mDone\e[0;0m ($@)\n"

clean:
	@printf "Cleaning AI Bin Files...\n"
	@\rm -rf *.o ./testeai
	@printf "\e[0;32mCleaned.\e[0;0m\n"
