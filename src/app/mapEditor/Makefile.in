#  DccNiTghtmare is public domain. Do whatever you want with this code.
CC = g++
CFLAGS = -g -c -Wall -O2
EFLAGS = -Wall -O2 -L/usr/X11R6/lib -lGLU -lGL -lSDL -lSDL_image -lcal3d -logg -lvorbis -lvorbisfile -lopenal
PROGFLAGS = 
ENDGUI = ../../gui/
ENDENGINE = ../../engine/
ENDMAPA = ../../map/
ENDETC = ../../etc/
ENDIA = ../../ia/
ENDPART = ../../particle/
ENDCLASSES = ../../classes/
ENDFIGHT = ../../fight/
ENDSOUND = ../../sound/
ENDLANG = ../../lang/
OBJSMAPA = $(ENDMAPA)map.o $(ENDMAPA)mapfog.o $(ENDMAPA)maplights.o $(ENDMAPA)mapobjeto.o $(ENDMAPA)maproad.o
OBJSGUI = $(ENDGUI)bartexto.o $(ENDGUI)botao.o $(ENDGUI)cores.o $(ENDGUI)cxsel.o $(ENDGUI)desenho.o $(ENDGUI)erro.o $(ENDGUI)messages.o $(ENDGUI)eventos.o $(ENDGUI)farso.o $(ENDGUI)figura.o $(ENDGUI)fonte.o $(ENDGUI)healthBar.o $(ENDGUI)janela.o $(ENDGUI)lista.o $(ENDGUI)listtext.o $(ENDGUI)menu.o $(ENDGUI)mouse.o $(ENDGUI)quadtexto.o $(ENDGUI)rolbar.o $(ENDGUI)seltexto.o $(ENDGUI)tabbotao.o
OBJSNET = #$(ENDNET)client.o $(ENDNET)common.o
OBJSIA = $(ENDIA)agent.o $(ENDIA)pattAgent.o $(ENDIA)potentAgent.o $(ENDIA)astar.o $(ENDIA)fuzzy.o $(ENDIA)fuzzyvariable.o $(ENDIA)fuzzyfunction.o $(ENDIA)fuzzyrule.o
OBJSCLASSES = $(ENDCLASSES)classes.o $(ENDCLASSES)race.o $(ENDCLASSES)skills.o $(ENDCLASSES)align.o $(ENDCLASSES)feats.o $(ENDCLASSES)defs.o $(ENDCLASSES)actions.o $(ENDCLASSES)thing.o $(ENDCLASSES)object.o $(ENDCLASSES)inventory.o
OBJSSOUND = $(ENDSOUND)ogg_stream.o  $(ENDSOUND)sound.o $(ENDSOUND)sndfx.o
OBJSLANG = $(ENDLANG)lang.o
OBJSPART = $(ENDPART)part1.o $(ENDPART)part2.o $(ENDPART)part3.o $(ENDPART)part4.o $(ENDPART)part5.o $(ENDPART)part6.o $(ENDPART)part7.o $(ENDPART)particle.o $(ENDPART)partSystem.o $(ENDPART)wave.o $(ENDPART)grass.o
OBJSFIGHT = $(ENDFIGHT)fightGroup.o $(ENDFIGHT)initiative.o $(ENDFIGHT)fightSystem.o
OBJSETC = $(ENDETC)animodel.o $(ENDETC)glm.o $(ENDETC)texture.o $(ENDETC)modellist.o
OBJSENGINE = $(ENDENGINE)alignwindow.o $(ENDENGINE)aspectwindow.o $(ENDENGINE)attwindow.o $(ENDENGINE)camera.o $(ENDENGINE)classwindow.o $(ENDENGINE)collision.o $(ENDENGINE)conversa.o $(ENDENGINE)culling.o $(ENDENGINE)cursor.o $(ENDENGINE)dccnit.o $(ENDENGINE)initial.o $(ENDENGINE)inventwindow.o $(ENDENGINE)modstate.o $(ENDENGINE)options.o $(ENDENGINE)personagens.o $(ENDENGINE)racewindow.o $(ENDENGINE)skillwindow.o $(ENDENGINE)sky.o $(ENDENGINE)sun.o $(ENDENGINE)util.o
OBJS = area.o editor.o guiIO.o listWindow.o mapEditor.o message.o objects.o particles.o portal.o terrain.o wall.o

BIN = ../../../bin/

all: mapEditor

area.o: area.cpp area.h
	@printf "Making area.o... "
	@$(CC) $(CFLAGS) area.cpp -o area.o
	@printf "\e[0;32mDone.\e[0;0m\n"

editor.o: editor.cpp editor.h
	@printf "Making editor.o... "
	@$(CC) $(CFLAGS) editor.cpp -o editor.o
	@printf "\e[0;32mDone.\e[0;0m\n"

guiIO.o: guiIO.cpp guiIO.h
	@printf "Making guiIO.o... "
	@$(CC) $(CFLAGS) guiIO.cpp -o guiIO.o
	@printf "\e[0;32mDone.\e[0;0m\n"

listWindow.o: listwindow.cpp listwindow.h
	@printf "Making listWindow.o... "
	@$(CC) $(CFLAGS) listwindow.cpp -o listWindow.o
	@printf "\e[0;32mDone.\e[0;0m\n"	

mapEditor.o: mapEditor.cpp mapEditor.h
	@printf "Making mapEditor.o... "
	@$(CC) $(CFLAGS) mapEditor.cpp -o mapEditor.o
	@printf "\e[0;32mDone.\e[0;0m\n"

message.o: message.cpp message.h
	@printf "Making message.o... "
	@$(CC) $(CFLAGS) message.cpp -o message.o
	@printf "\e[0;32mDone.\e[0;0m\n"

particles.o: particles.cpp particles.h
	@printf "Making particles.o... "
	@$(CC) $(CFLAGS) particles.cpp -o particles.o
	@printf "\e[0;32mDone.\e[0;0m\n"

portal.o: portal.cpp portal.h
	@printf "Making portal.o... "
	@$(CC) $(CFLAGS) portal.cpp -o portal.o
	@printf "\e[0;32mDone.\e[0;0m\n"

objects.o: objects.cpp objects.h
	@printf "Making objects.o... "
	@$(CC) $(CFLAGS) objects.cpp -o objects.o
	@printf "\e[0;32mDone.\e[0;0m\n"

terrain.o: terrain.cpp terrain.h
	@printf "Making terrain.o... "
	@$(CC) $(CFLAGS) terrain.cpp -o terrain.o
	@printf "\e[0;32mDone.\e[0;0m\n"

wall.o: wall.cpp wall.h
	@printf "Making wall.o... "
	@$(CC) $(CFLAGS) wall.cpp -o wall.o
	@printf "\e[0;32mDone.\e[0;0m\n"

mapEditor: $(OBJSGUI) $(OBJSMAPA) $(OBJS)
	@printf "Linking mapEditor... "
	@$(CC) $(EFLAGS) $(OBJSGUI) $(OBJSIA) $(OBJSMAPA) $(OBJSENGINE) $(OBJSPART) $(OBJSCLASSES) $(OBJSLANG) $(OBJSETC) $(OBJSSOUND) $(OBJSFIGHT) $(OBJS) -o $(BIN)mapEditor
	@printf "\e[0;32mDone.\e[0;0m\n"

clean:
	@printf "Cleaning mapEditor Bin Files... "
	@\rm -rf *.o *.e $(BIN)mapEditor
	@printf "\e[0;32mDone.\e[0;0m\n"
