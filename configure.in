#  DNT: a satirical post-apocalyptical RPG.
#  Copyright (C) 2005-2009 DNTeam <dnt@dnteam.org>
# 
#  This file is part of DNT.
# 
#  DNT is free software: you can redistribute it and/or modify
#  it under the terms of the GNU General Public License as published by
#  the Free Software Foundation, either version 3 of the License, or
#  (at your option) any later version.
#
#  DNT is distributed in the hope that it will be useful,
#  but WITHOUT ANY WARRANTY; without even the implied warranty of
#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#  GNU General Public License for more details.
#
#  You should have received a copy of the GNU General Public License
#  along with DNT.  If not, see <http://www.gnu.org/licenses/>.

AC_PREREQ(2.61)
AC_INIT(DNT, 0.10, http://sourceforge.net/projects/dccnitghtmare)
#AC_CONFIG_SRCDIR([src/])
AC_CONFIG_HEADER([src/config.h])

PACKAGE=dnt
VERSION=0.10
AC_DEFINE_UNQUOTED(PACKAGE, "$PACKAGE")
AC_DEFINE_UNQUOTED(VERSION, "$VERSION")
AC_SUBST(PACKAGE)
AC_SUBST(VERSION)


# Checks for programs.
AC_PROG_CXX
AC_PROG_CC
AC_PROG_MAKE_SET
AC_PROG_CPP

AC_GNU_SOURCE


# check for internationalization
AM_GNU_GETTEXT([external])

AC_CANONICAL_HOST

# Check for sdl-config to find SDL Paths
AC_CHECK_PROG(SDLCONFIG,sdl-config,yes,no)
if test $SDLCONFIG = "yes"; then
{
   CFLAGS="$CFLAGS $(sdl-config --cflags)"
   CPPFLAGS="$CPPFLAGS $(sdl-config --cflags)"
   LIBS="$LIBS $(sdl-config --libs)"
}
else
{
   AC_MSG_ERROR(Coudn't find the program sdl-config. Usually it is installed with SDL library. Please go to http://www.libsdl.org and get it.)
}
fi

#Check for openal-config to find openal Paths
#AC_CHECK_PROG(OPENALCONFIG,openal-config,yes,no)
#if test $OPENALCONFIG = "yes"; then
#{
#   CFLAGS="$CFLAGS $(openal-config --cflags)"
#   CPPFLAGS="$CPPFLAGS $(openal-config --cflags)" 
#   LIBS="$LIBS $(openal-config --libs)"
#}
#else
#{
#   AC_MSG_ERROR(Coudn't find the program openal-config. Usually it is installed with OpenAL library. Please go to http://www.openal.org and get it.)
#}
#fi

# Checks for debug flags
AC_ARG_ENABLE([debug_astar], [  --enable-debug_astar    Enable A* debug code], [CPPFLAGS="$CPPFLAGS -DDEBUG_ASTAR"])
AC_ARG_ENABLE([debug_pending_action], [  --enable-debug_pending_action    Enable Pending Action debug code], [CPPFLAGS="$CPPFLAGS -DDNT_DEBUG_PENDING_ACTION"])
AC_ARG_ENABLE([debug_scripts], [  --enable-debug_scripts    Enable DNT Script Language debug code], [CPPFLAGS="$CPPFLAGS -DDNT_DEBUG_SCRIPTS"])

# Checks for libraries.

#OpenGL
AC_CHECK_LIB([GL], [main], [], [AC_MSG_ERROR(Couldn't find OpenGL. Run ./configure LDFLAGS=-Lpath_to_opengl_lib. For Example: ./configure LDFLAGS=-L/usr/X11R6/lib/)])
AC_CHECK_LIB([GLU], [main], [], [AC_MSG_ERROR(Couldn't find GLU. Run ./configure LDFLAGS=-Lpath_to_opengl_lib. For Example: ./configure LDFLAGS=-L/usr/X11R6/lib/)])
AC_CHECK_LIB([SDL], [main], [], [AC_MSG_ERROR(Coudn't find SDL. Please go to http://www.libsdl.org and get it.)])
AC_CHECK_LIB([SDL_image], [main], [], [AC_MSG_ERROR(Couldn't find SDL_image. Please go to http://www.libsdl.org/projects/SDL_image and get it!)])
AC_CHECK_LIB([SDL_ttf], [main], [], [AC_MSG_ERROR(Couldn't find SDL_ttf. Please go to http://www.libsdl.org/projects/SDL_ttf and get it!)])
AC_CHECK_LIB([SDL_ttf], [TTF_SetFontOutline], [], [AC_MSG_ERROR(Couldn't find SDL_ttf >= 2.0.10. Please go to http://www.libsdl.org/projects/SDL_ttf and get it!)])
AC_CHECK_LIB([cal3d], [main], [], [AC_MSG_ERROR(Couldn't find Cal3D. Please go to http://home.gna.org/cal3d and get it.)])
AC_CHECK_LIB([m], [main], [], [AC_MSG_ERROR(Couldn't find math lib. Something is wrong with your C/C++ distribution)])
AC_CHECK_LIB([ogg], [main], [], [AC_MSG_ERROR(Couldn't find libogg. Go to http://xiph.org/vorbis and get it.)])
AC_CHECK_LIB([openal], [main], [], [AC_MSG_ERROR(Couldn't find OpenAL. Go to http://www.openal.org and get it.)])
AC_CHECK_LIB([vorbis], [main], [], [AC_MSG_ERROR(Couldn't find libvorbis. Go to http://xiph.org/vorbis and get it.)])
AC_CHECK_LIB([vorbisfile], [main], [], [AC_MSG_ERROR(Couldn't find libogg. Go to http://xiph.org/vorbis and get the libvorbis file.)])
#the intl is needed or not gnu systems
#AC_CHECK_LIB([intl], [main], [], [])



# Checks for header files.
AC_HEADER_STDC
AC_CHECK_HEADER(GL/glu.h, [], [AC_MSG_ERROR(Couldn't find OPENGL headers. Run ./configure CPPFLAGS=-Ipath_to_opengl_headers. For Example: ./configure CPPFLAGS=-I/usr/X11R6/include/)])
AC_CHECK_HEADER(SDL/SDL_opengl.h, [], [AC_MSG_ERROR(Couldn't find SDL headers. Run ./configure CPPFLAGS=-Ipath_to_sdl_headers. For Example: ./configure CPPFLAGS=-I/usr/local/include/)])
AC_CHECK_HEADER(SDL/SDL.h, [], [AC_MSG_ERROR(Couldn't find SDL headers. Run ./configure CPPFLAGS=-Ipath_to_sdl_headers. For Example: ./configure CPPFLAGS=-I/usr/local/include/)])
AC_CHECK_HEADER(SDL/SDL_image.h, [], [AC_MSG_ERROR(Couldn't find SDL headers. Run ./configure CPPFLAGS=-Ipath_to_sdl_headers. For Example: ./configure CPPFLAGS=-I/usr/local/include/)])
#AC_CHECK_HEADER([libintl.h], [AC_DEFINE(HAVE_INTL)], [])

# Checks for typedefs, structures, and compiler characteristics.
AC_HEADER_STDBOOL
AC_C_CONST
AC_C_INLINE
AC_TYPE_SIZE_T

# Checks for library functions.
AC_FUNC_MALLOC
AC_CHECK_FUNCS([atexit floor sqrt strrchr strstr])

AC_DEFINE_DIR([DATADIR], [datadir], [Where data are placed to.])

AC_CONFIG_FILES([Doxyfile
                 Makefile  
                 po/Makefile.in
                 src/Makefile
                 src/app/Makefile
                 src/app/mapEditor/Makefile
                 src/app/partEditor/Makefile
                 src/cbook/Makefile
                 src/classes/Makefile
                 src/engine/Makefile
                 src/etc/Makefile
                 src/fight/Makefile
                 src/gui/Makefile
                 src/ia/Makefile
                 src/lang/Makefile
                 src/map/Makefile
                 src/particle/Makefile
                 src/sound/Makefile])
AC_OUTPUT
